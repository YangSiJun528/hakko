name: CI Workflow

# main 브랜치에 푸시될 때 트리거
on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-GHCR:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      # 1. 코드 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v4

      # 2. JDK 설치 및 Gradle 빌드
      - name: Set up JDK and build with Gradle
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build application
        run: |
          echo "Starting Gradle build..."
          ./gradlew build -x test

      # 3. Docker Hub 로그인
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      # 4. 이미지의 metadata 추출
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: latest

      # 5. Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./deploy
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # 7. 아티팩트 증명을 사용하여 빌드의 출처 설정
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
